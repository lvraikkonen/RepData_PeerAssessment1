{
    "contents" : "# Reproducible Research: Peer Assessment 1\n\n## Loading and preprocessing the data\n\n```{r load data}\nunzip(zipfile = \"activity.zip\")\ndata <- read.csv(\"activity.csv\")\n```\n\n## What is mean total number of steps taken per day?\n```{r mean steps per day}\nlibrary(ggplot2)\n\n## totalPerDay <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)\naggrData <- aggregate(data$steps, by=list(data$date), FUN=sum, na.rm=TRUE)\ncolnames(aggrData) <- c(\"Date\",\"steps\")\n## qplot(x=Date, data=aggrData, geom=\"histogram\")\n\nhist(aggrData$steps, main = paste(\"Histogram of the total number of steps taken each day\"),\n     xlab = \"total number of steps taken each day\")\n\n## mean\nmean(aggrData$steps, na.rm = TRUE)\n\n## median\nmedian(aggrData$steps,na.rm = TRUE)\n```\n\n## What is the average daily activity pattern?\nMake a time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n```{r daily activity pattern}\naverages <- aggregate(x = list(steps = data$steps),\n                      by = list(interval = data$interval), \n                      FUN = mean, na.rm = TRUE)\n## Time Series Plot\nggplot(data = averages, aes(x = interval, y = steps)) +\n        geom_line() + xlab(\"5-minute interval\") + \n        ylab(\"average number of steps taken\")\n\n```\n\nWhich 5-minute interval, the 5-minute interval contains the maximum number of steps?\n```{r}\nmaxSteps <- max(averages$steps)\n\naverages[averages$steps==maxSteps,]\n```\n\n\n## Imputing missing values\n1. Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)\n```{r missing values}\n\nnrow(data[is.na(data$steps),])\ntable(is.na(data$steps))\n\n```\n\n\n2. Use the mean steps for that 5-minute interval to fill in missing value\n3. Create a new dataset that is equal to the original dataset but with the missing data filled in.\n```{r fill missing value}\n## mean steps for each interval\nmeanStep <- aggregate(x = list(steps = data$steps),\n                      by = list(interval = data$interval), \n                      FUN = mean, na.rm = TRUE)\n\nfill.value <- function(steps, interval) {\n        filled <- NA\n        if (!is.na(steps))\n                filled <- c(steps) \n        ## is missing\n        else filled <- (meanStep[meanStep$interval == interval, \"steps\"])\n        \n        return(filled)\n        }\nfilled.data <- data\nfilled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)\n\nsummary(data)\nsummary(filled.data)\n\n```\n\n\n4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day.\n```{r}\naggrData_Filled <- aggregate(filled.data$steps, by=list(filled.data$date), FUN=sum, na.rm=TRUE)\ncolnames(aggrData_Filled) <- c(\"Date\",\"steps\")\n## qplot(x=Date, data=aggrData_Filled, geom=\"histogram\")\nhist(aggrData_Filled$steps,\n     main = paste(\"Histogram of the total number of steps taken each day (With missing data filled in)\"),\n     xlab = \"total number of steps taken each day\")\n\n## mean\nmean(aggrData_Filled$steps, na.rm = TRUE)\n\n## median\nmedian(aggrData_Filled$steps,na.rm = TRUE)\n\n```\n\nThe mean and median total number of steps values are higher than before.\nBecause there are some days with  steps  values `NA` for some  interval . \nThe total number of steps taken in such days are set to 0s by default. \nAfter replacing missing  steps  values with the mean steps of related interval value,\nthese 0 values are removed from the histogram of total number of steps taken each day.\n\n\n## Are there differences in activity patterns between weekdays and weekends?\nUse the dataset with the filled-in missing values for this part\n\n1. Create a new factor variable in the dataset with two levels – “weekday” and “weekend”\n```{r}\nisWeekday <- function(date){\n        day <- weekdays(date)\n        if (day %in% c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")) \n                return(\"Weekday\") \n        else if (day %in% c(\"Saturday\", \"Sunday\")) \n                return(\"Weekend\") \n        else stop(\"invalid date\")\n\n}\n\nfilled.data$date <- as.Date(filled.data$date)\nfilled.data$day <- sapply(filled.data$date, FUN = isWeekday)\n\n```\n\n2. Make a panel plot containing a time series plot \n```{r}\naverages <- aggregate(steps ~ interval + day, data = filled.data, mean)\nggplot(averages, aes(interval, steps)) +\n        geom_line() + facet_grid(day ~ .) + \n        xlab(\"5-minute interval\") + ylab(\"Number of steps\")\n\n```\n",
    "created" : 1405677624299.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3535033687",
    "id" : "2B9D91CA",
    "lastKnownWriteTime" : 1405677826,
    "path" : "~/GitHub/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}